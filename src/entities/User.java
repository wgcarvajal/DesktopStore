package entities;
// Generated 9/02/2021 12:32:00 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="storebd"
)
public class User  implements java.io.Serializable {


     private Long usId;
     private Owner owner;
     private String usIdentification;
     private String usName;
     private String usLastName;
     private String usUserName;
     private String usPassword;
     private String usEmail;
     private String usAddress;
     private String usPhone;
     private boolean usActive;
     private Set<Orders> orderses = new HashSet<Orders>(0);
     private Set<Pay> pays = new HashSet<Pay>(0);
     private Set<Lend> lends = new HashSet<Lend>(0);
     private Set<Cancelpurchaseauditorie> cancelpurchaseauditories = new HashSet<Cancelpurchaseauditorie>(0);
     private Set<Usergroup> usergroups = new HashSet<Usergroup>(0);
     private Set<Purchase> purchases = new HashSet<Purchase>(0);

    public User() {
    }

	
    public User(String usIdentification, String usName, String usLastName, String usUserName, String usPassword, String usEmail, boolean usActive) {
        this.usIdentification = usIdentification;
        this.usName = usName;
        this.usLastName = usLastName;
        this.usUserName = usUserName;
        this.usPassword = usPassword;
        this.usEmail = usEmail;
        this.usActive = usActive;
    }
    public User(Owner owner, String usIdentification, String usName, String usLastName, String usUserName, String usPassword, String usEmail, String usAddress, String usPhone, boolean usActive, Set<Orders> orderses, Set<Pay> pays, Set<Lend> lends, Set<Cancelpurchaseauditorie> cancelpurchaseauditories, Set<Usergroup> usergroups, Set<Purchase> purchases) {
       this.owner = owner;
       this.usIdentification = usIdentification;
       this.usName = usName;
       this.usLastName = usLastName;
       this.usUserName = usUserName;
       this.usPassword = usPassword;
       this.usEmail = usEmail;
       this.usAddress = usAddress;
       this.usPhone = usPhone;
       this.usActive = usActive;
       this.orderses = orderses;
       this.pays = pays;
       this.lends = lends;
       this.cancelpurchaseauditories = cancelpurchaseauditories;
       this.usergroups = usergroups;
       this.purchases = purchases;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="usId", unique=true, nullable=false)
    public Long getUsId() {
        return this.usId;
    }
    
    public void setUsId(Long usId) {
        this.usId = usId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ownId")
    public Owner getOwner() {
        return this.owner;
    }
    
    public void setOwner(Owner owner) {
        this.owner = owner;
    }

    
    @Column(name="usIdentification", nullable=false, length=30)
    public String getUsIdentification() {
        return this.usIdentification;
    }
    
    public void setUsIdentification(String usIdentification) {
        this.usIdentification = usIdentification;
    }

    
    @Column(name="usName", nullable=false, length=100)
    public String getUsName() {
        return this.usName;
    }
    
    public void setUsName(String usName) {
        this.usName = usName;
    }

    
    @Column(name="usLastName", nullable=false, length=100)
    public String getUsLastName() {
        return this.usLastName;
    }
    
    public void setUsLastName(String usLastName) {
        this.usLastName = usLastName;
    }

    
    @Column(name="usUserName", nullable=false, length=75)
    public String getUsUserName() {
        return this.usUserName;
    }
    
    public void setUsUserName(String usUserName) {
        this.usUserName = usUserName;
    }

    
    @Column(name="usPassword", nullable=false, length=256)
    public String getUsPassword() {
        return this.usPassword;
    }
    
    public void setUsPassword(String usPassword) {
        this.usPassword = usPassword;
    }

    
    @Column(name="usEmail", nullable=false, length=200)
    public String getUsEmail() {
        return this.usEmail;
    }
    
    public void setUsEmail(String usEmail) {
        this.usEmail = usEmail;
    }

    
    @Column(name="usAddress", length=200)
    public String getUsAddress() {
        return this.usAddress;
    }
    
    public void setUsAddress(String usAddress) {
        this.usAddress = usAddress;
    }

    
    @Column(name="usPhone", length=200)
    public String getUsPhone() {
        return this.usPhone;
    }
    
    public void setUsPhone(String usPhone) {
        this.usPhone = usPhone;
    }

    
    @Column(name="usActive", nullable=false)
    public boolean isUsActive() {
        return this.usActive;
    }
    
    public void setUsActive(boolean usActive) {
        this.usActive = usActive;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Orders> getOrderses() {
        return this.orderses;
    }
    
    public void setOrderses(Set<Orders> orderses) {
        this.orderses = orderses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Pay> getPays() {
        return this.pays;
    }
    
    public void setPays(Set<Pay> pays) {
        this.pays = pays;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Lend> getLends() {
        return this.lends;
    }
    
    public void setLends(Set<Lend> lends) {
        this.lends = lends;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Cancelpurchaseauditorie> getCancelpurchaseauditories() {
        return this.cancelpurchaseauditories;
    }
    
    public void setCancelpurchaseauditories(Set<Cancelpurchaseauditorie> cancelpurchaseauditories) {
        this.cancelpurchaseauditories = cancelpurchaseauditories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Usergroup> getUsergroups() {
        return this.usergroups;
    }
    
    public void setUsergroups(Set<Usergroup> usergroups) {
        this.usergroups = usergroups;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Purchase> getPurchases() {
        return this.purchases;
    }
    
    public void setPurchases(Set<Purchase> purchases) {
        this.purchases = purchases;
    }




}


